@top KVSearch { Expression }

@precedence { and @left, or @left }

Expression {
  QueryNode | Query | "(" Query ")" | "(" QueryNode ")"
}

QueryNode {
  Expression !and And Expression |
  Expression !or Or Expression
}

Query {
  QueryPath Neq Pattern |
  QueryPath EqlRegex Pattern |
  QueryPath EqlSingle Pattern |
  QueryPath Lte Pattern |
  QueryPath Lss Pattern |
  QueryPath Gte Pattern |
  QueryPath Gtr Pattern
}

QueryPath {
  (Identifier | "/" Regexp "/") ("." QueryPath)?
}

@skip { whitespace }

@tokens {
  whitespace { std.whitespace+ }
  Identifier { (std.asciiLetter | "_" | ":") (std.asciiLetter | std.digit | "_" | ":" )*}
  Pattern { (std.asciiLetter | std.digit | "_" | ":" | ".") (std.asciiLetter | std.digit | "_" | ":" | "." )*}
  Regexp { (std.asciiLetter | std.digit | "_" | "-" | ":" | "*" | "?" | "+" | "\\" | "." | "(" | ")" | "[" | "]")+}

  // Operator
  Neq { "!=" }
  EqlRegex { "=~" }
  EqlSingle { "=" }
  Lte { "<=" }
  Lss { "<" }
  Gte { ">=" }
  Gtr { ">" }
  And { "AND" }
  Or { "OR" }
}

@external propSource kvSearchHighLight from "./highlight"
